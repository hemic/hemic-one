<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <!--<Configuration status="WARN" monitorInterval="30"> -->
    <properties>
        <property name="APP_NAME">hemic-one</property>
        <property name="LOG_HOME">${sys:user.home}/${APP_NAME}/logs</property>
    </properties>
    <Appenders>
        <!--*********************控制台日志***********************-->
        <Console name="consoleAppender" target="SYSTEM_OUT">
            <!--设置日志格式及颜色-->
            <PatternLayout
                pattern="%style{%d{ISO8601}}{bright,green} %highlight{%-5level} [%style{%t}{bright,blue}] %style{%C{}}{bright,yellow}: %msg%n%style{%throwable}{red}"
                disableAnsi="false" noConsoleNoAnsi="false"/>
        </Console>

        <!--*********************文件日志***********************-->
        <!--all级别日志-->
        <RollingFile immediateFlush="false" name="allFileAppender"
                     fileName="${LOG_HOME}/all.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/all-%d{yyyy-MM-dd}-%i.log.gz">
            <!--设置日志格式-->
            <PatternLayout>
                <pattern>%d %p %C{} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

        <!--debug级别日志-->
        <RollingFile immediateFlush="false" name="debugFileAppender"
                     fileName="${LOG_HOME}/debug.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log.gz">
            <Filters>
                <!--过滤掉info及更高级别日志-->
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
            </Filters>
            <!--设置日志格式-->
            <PatternLayout>
                <pattern>%d %p %C{} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

        <!--info级别日志-->
        <RollingFile immediateFlush="false" name="infoFileAppender"
                     fileName="${LOG_HOME}/info.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.gz">
            <Filters>
                <!--过滤掉warn及更高级别日志-->
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
            </Filters>
            <!--设置日志格式-->
            <PatternLayout>
                <pattern>%d %p %C{} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
            <!-- 设置日志文件切分参数 -->
            <!--<OnStartupTriggeringPolicy/>-->
            <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
            <SizeBasedTriggeringPolicy size="100 MB"/>
            <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
            <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <!--<DefaultRolloverStrategy max="100"/>-->
        </RollingFile>

        <!--warn级别日志-->
        <RollingFile immediateFlush="false" name="warnFileAppender"
                     fileName="${LOG_HOME}/warn.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log.gz">
            <Filters>
                <!--过滤掉error及更高级别日志-->
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
            </Filters>
            <!--设置日志格式-->
            <PatternLayout>
                <pattern>%d %p %C{} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

        <!--error及更高级别日志-->
        <RollingFile immediateFlush="false" name="errorFileAppender"
                     fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.gz">
            <!--设置日志格式-->
            <PatternLayout>
                <pattern>%d %p %C{} [%t] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

        <!--json格式error级别日志-->
        <RollingFile immediateFlush="false" name="errorJsonAppender"
                     fileName="${LOG_HOME}/error-json.log"
                     filePattern="${LOG_HOME}/error-json-%d{yyyy-MM-dd}-%i.log.gz">
            <JSONLayout compact="true" eventEol="true" locationInfo="true"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!-- 根日志设置 -->
        <asyncRoot level="debug" includeLocation="false">
            <AppenderRef ref="allFileAppender"  level="all"/>
            <AppenderRef ref="consoleAppender" level="debug"/>
            <AppenderRef ref="debugFileAppender" level="debug"/>
            <AppenderRef ref="infoFileAppender" level="info"/>
            <AppenderRef ref="warnFileAppender" level="warn"/>
            <AppenderRef ref="errorFileAppender" level="error"/>
            <AppenderRef ref="errorJsonAppender" level="error"/>
        </asyncRoot>

        <asyncLogger name="javax.activation" includeLocation="false" level="WARN" />
        <asyncLogger name="javax.mail" includeLocation="false"  level="WARN"/>
        <asyncLogger name="javax.management.remote" includeLocation="false"  level="WARN"/>
        <asyncLogger name="javax.xml.bind" includeLocation="false"  level="WARN"/>
        <asyncLogger name="ch.qos.logback"  includeLocation="false" level="WARN"/>
        <asyncLogger name="com.ryantenney" includeLocation="false"  level="WARN"/>
        <asyncLogger name="com.sun" includeLocation="false"  level="WARN"/>
        <asyncLogger name="com.zaxxer" includeLocation="false"  level="WARN"/>
        <asyncLogger name="io.undertow" includeLocation="false"  level="WARN"/>
        <asyncLogger name="io.undertow.websockets.jsr" includeLocation="false"  level="ERROR"/>
        <asyncLogger name="org.apache" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.apache.catalina.startup.DigesterFactory" includeLocation="false"  level="OFF"/>
        <asyncLogger name="org.bson" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.hibernate.validator"  includeLocation="false" level="WARN"/>
        <asyncLogger name="org.hibernate"  includeLocation="false" level="WARN"/>
        <asyncLogger name="org.hibernate.ejb.HibernatePersistence" includeLocation="false"  level="OFF"/>
        <asyncLogger name="org.postgresql" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.springframework" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.springframework.web" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.springframework.security" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.springframework.cache" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.thymeleaf" includeLocation="false"  level="WARN"/>
        <asyncLogger name="org.xnio"  includeLocation="false" level="WARN"/>
        <asyncLogger name="springfox"  includeLocation="false" level="WARN"/>
        <asyncLogger name="sun.rmi"  includeLocation="false" level="WARN"/>
        <asyncLogger name="liquibase"  includeLocation="false" level="WARN"/>
        <asyncLogger name="LiquibaseSchemaResolver" includeLocation="false"  level="INFO"/>
        <asyncLogger name="springfox.documentation.schema.property"  includeLocation="false" level="ERROR"/>
        <asyncLogger name="sun.rmi.transport"  includeLocation="false" level="WARN"/>
        <!-- See https://github.com/jhipster/generator-jhipster/issues/13835 -->
        <asyncLogger name="Validator"  includeLocation="false" level="INFO"/>
        <!-- See https://github.com/jhipster/generator-jhipster/issues/14444 -->
        <asyncLogger name="_org.springframework.web.servlet.HandlerMapping.Mappings" includeLocation="false"  level="INFO"/>
        <asyncLogger name="com.hemic"  includeLocation="false" level="WARN"/>
    </Loggers>

</Configuration>
